# src/mcp_server.py
import os
from typing import Dict, Optional
from dotenv import load_dotenv
from pydantic_settings import BaseSettings, SettingsConfigDict

from mcp.server.fastmcp import FastMCP, Context
from daytona_sdk import Daytona, CreateWorkspaceParams
from mcp.types import TextContent


class Settings(BaseSettings):
    """Settings for the FastAPI server."""

    model_config = SettingsConfigDict(
        env_prefix="MCP_DAYTONA_",
        env_file=".env.local"
    )
    daytona_api_key: str
    daytona_server_url: str
    daytona_target: str = "local"


settings = Settings()
load_dotenv()


def create_mcp_server() -> FastMCP:
    mcp = FastMCP(name="Daytona MCP", description="MCP Server with Daytona integration.")
    daytona_client = Daytona(
        config={
            "api_key": settings.daytona_api_key,
            "server_url": settings.daytona_server_url,
            "target": settings.daytona_target,
        }
    )

    @mcp.tool()
    async def create_daytona_env(
        language: str, image: Optional[str] = None, os_user: Optional[str] = None, env_vars: Optional[Dict[str, str]] = None
    ) -> str:
        """Creates a new Daytona development environment. Returns workspace ID."""
        params = CreateWorkspaceParams(language=language, image=image, os_user=os_user, env_vars=env_vars)
        workspace = await daytona_client.create(params)
        return workspace.id

    @mcp.tool()
    async def execute_claude_code(
        code: str, workspace_id: str, ctx: Context
    ) -> str:
        """Executes code generated by Claude inside a sandboxed Daytona workspace."""
        workspace = daytona_client.get_current_workspace(workspace_id=workspace_id)
        response = await workspace.process.code_run(code)
        return response.result

    @mcp.tool()
    async def remove_daytona_env(workspace_id: str) -> str:
        """Removes the given Daytona workspace."""
        workspace = daytona_client.get_current_workspace(workspace_id=workspace_id)
        await daytona_client.remove(workspace)
        return "Removed workspace"

    return mcp